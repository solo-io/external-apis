// Code generated by skv2. DO NOT EDIT.

package v1

import (
	cert_manager_io_v1 "github.com/solo-io/external-apis/pkg/api/certmanager/cert-manager.io/v1"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for CertificateRequestClient from Clientset
func CertificateRequestClientFromClientsetProvider(clients cert_manager_io_v1.Clientset) cert_manager_io_v1.CertificateRequestClient {
	return clients.CertificateRequests()
}

// Provider for CertificateRequest Client from Client
func CertificateRequestClientProvider(client client.Client) cert_manager_io_v1.CertificateRequestClient {
	return cert_manager_io_v1.NewCertificateRequestClient(client)
}

type CertificateRequestClientFactory func(client client.Client) cert_manager_io_v1.CertificateRequestClient

func CertificateRequestClientFactoryProvider() CertificateRequestClientFactory {
	return CertificateRequestClientProvider
}

type CertificateRequestClientFromConfigFactory func(cfg *rest.Config) (cert_manager_io_v1.CertificateRequestClient, error)

func CertificateRequestClientFromConfigFactoryProvider() CertificateRequestClientFromConfigFactory {
	return func(cfg *rest.Config) (cert_manager_io_v1.CertificateRequestClient, error) {
		clients, err := cert_manager_io_v1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.CertificateRequests(), nil
	}
}
