// Code generated by skv2. DO NOT EDIT.

package v1alpha1

import (
	extensions_istio_io_v1alpha1 "github.com/solo-io/external-apis/pkg/api/istio/extensions.istio.io/v1alpha1"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for WasmPluginClient from Clientset
func WasmPluginClientFromClientsetProvider(clients extensions_istio_io_v1alpha1.Clientset) extensions_istio_io_v1alpha1.WasmPluginClient {
	return clients.WasmPlugins()
}

// Provider for WasmPlugin Client from Client
func WasmPluginClientProvider(client client.Client) extensions_istio_io_v1alpha1.WasmPluginClient {
	return extensions_istio_io_v1alpha1.NewWasmPluginClient(client)
}

type WasmPluginClientFactory func(client client.Client) extensions_istio_io_v1alpha1.WasmPluginClient

func WasmPluginClientFactoryProvider() WasmPluginClientFactory {
	return WasmPluginClientProvider
}

type WasmPluginClientFromConfigFactory func(cfg *rest.Config) (extensions_istio_io_v1alpha1.WasmPluginClient, error)

func WasmPluginClientFromConfigFactoryProvider() WasmPluginClientFromConfigFactory {
	return func(cfg *rest.Config) (extensions_istio_io_v1alpha1.WasmPluginClient, error) {
		clients, err := extensions_istio_io_v1alpha1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.WasmPlugins(), nil
	}
}
