// Code generated by skv2. DO NOT EDIT.

package v1alpha1

import (
	telemetry_istio_io_v1alpha1 "github.com/solo-io/external-apis/pkg/api/istio/telemetry.istio.io/v1alpha1"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for TelemetryClient from Clientset
func TelemetryClientFromClientsetProvider(clients telemetry_istio_io_v1alpha1.Clientset) telemetry_istio_io_v1alpha1.TelemetryClient {
	return clients.Telemetries()
}

// Provider for Telemetry Client from Client
func TelemetryClientProvider(client client.Client) telemetry_istio_io_v1alpha1.TelemetryClient {
	return telemetry_istio_io_v1alpha1.NewTelemetryClient(client)
}

type TelemetryClientFactory func(client client.Client) telemetry_istio_io_v1alpha1.TelemetryClient

func TelemetryClientFactoryProvider() TelemetryClientFactory {
	return TelemetryClientProvider
}

type TelemetryClientFromConfigFactory func(cfg *rest.Config) (telemetry_istio_io_v1alpha1.TelemetryClient, error)

func TelemetryClientFromConfigFactoryProvider() TelemetryClientFromConfigFactory {
	return func(cfg *rest.Config) (telemetry_istio_io_v1alpha1.TelemetryClient, error) {
		clients, err := telemetry_istio_io_v1alpha1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.Telemetries(), nil
	}
}
