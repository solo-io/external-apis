// Code generated by skv2. DO NOT EDIT.

package v1alpha1

import (
	install_istio_io_v1alpha1 "github.com/solo-io/external-apis/pkg/api/istio/install.istio.io/v1alpha1"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for IstioOperatorClient from Clientset
func IstioOperatorClientFromClientsetProvider(clients install_istio_io_v1alpha1.Clientset) install_istio_io_v1alpha1.IstioOperatorClient {
	return clients.IstioOperators()
}

// Provider for IstioOperator Client from Client
func IstioOperatorClientProvider(client client.Client) install_istio_io_v1alpha1.IstioOperatorClient {
	return install_istio_io_v1alpha1.NewIstioOperatorClient(client)
}

type IstioOperatorClientFactory func(client client.Client) install_istio_io_v1alpha1.IstioOperatorClient

func IstioOperatorClientFactoryProvider() IstioOperatorClientFactory {
	return IstioOperatorClientProvider
}

type IstioOperatorClientFromConfigFactory func(cfg *rest.Config) (install_istio_io_v1alpha1.IstioOperatorClient, error)

func IstioOperatorClientFromConfigFactoryProvider() IstioOperatorClientFromConfigFactory {
	return func(cfg *rest.Config) (install_istio_io_v1alpha1.IstioOperatorClient, error) {
		clients, err := install_istio_io_v1alpha1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.IstioOperators(), nil
	}
}
