// Code generated by skv2. DO NOT EDIT.

package v1alpha2

import (
	access_smi_spec_io_v1alpha2 "github.com/solo-io/external-apis/pkg/api/smi/access.smi-spec.io/v1alpha2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for TrafficTargetClient from Clientset
func TrafficTargetClientFromClientsetProvider(clients access_smi_spec_io_v1alpha2.Clientset) access_smi_spec_io_v1alpha2.TrafficTargetClient {
	return clients.TrafficTargets()
}

// Provider for TrafficTarget Client from Client
func TrafficTargetClientProvider(client client.Client) access_smi_spec_io_v1alpha2.TrafficTargetClient {
	return access_smi_spec_io_v1alpha2.NewTrafficTargetClient(client)
}

type TrafficTargetClientFactory func(client client.Client) access_smi_spec_io_v1alpha2.TrafficTargetClient

func TrafficTargetClientFactoryProvider() TrafficTargetClientFactory {
	return TrafficTargetClientProvider
}

type TrafficTargetClientFromConfigFactory func(cfg *rest.Config) (access_smi_spec_io_v1alpha2.TrafficTargetClient, error)

func TrafficTargetClientFromConfigFactoryProvider() TrafficTargetClientFromConfigFactory {
	return func(cfg *rest.Config) (access_smi_spec_io_v1alpha2.TrafficTargetClient, error) {
		clients, err := access_smi_spec_io_v1alpha2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.TrafficTargets(), nil
	}
}
