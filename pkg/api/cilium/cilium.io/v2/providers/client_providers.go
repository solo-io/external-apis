// Code generated by skv2. DO NOT EDIT.

package v2

import (
	cilium_io_v2 "github.com/solo-io/external-apis/pkg/api/cilium/cilium.io/v2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for CiliumNetworkPolicyClient from Clientset
func CiliumNetworkPolicyClientFromClientsetProvider(clients cilium_io_v2.Clientset) cilium_io_v2.CiliumNetworkPolicyClient {
	return clients.CiliumNetworkPolicies()
}

// Provider for CiliumNetworkPolicy Client from Client
func CiliumNetworkPolicyClientProvider(client client.Client) cilium_io_v2.CiliumNetworkPolicyClient {
	return cilium_io_v2.NewCiliumNetworkPolicyClient(client)
}

type CiliumNetworkPolicyClientFactory func(client client.Client) cilium_io_v2.CiliumNetworkPolicyClient

func CiliumNetworkPolicyClientFactoryProvider() CiliumNetworkPolicyClientFactory {
	return CiliumNetworkPolicyClientProvider
}

type CiliumNetworkPolicyClientFromConfigFactory func(cfg *rest.Config) (cilium_io_v2.CiliumNetworkPolicyClient, error)

func CiliumNetworkPolicyClientFromConfigFactoryProvider() CiliumNetworkPolicyClientFromConfigFactory {
	return func(cfg *rest.Config) (cilium_io_v2.CiliumNetworkPolicyClient, error) {
		clients, err := cilium_io_v2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.CiliumNetworkPolicies(), nil
	}
}
