// Code generated by skv2. DO NOT EDIT.

package v1beta1

import (
	gateway_networking_k8s_io_v1beta1 "github.com/solo-io/external-apis/pkg/api/k8s/gateway.networking.k8s.io/v1beta1"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for GatewayClient from Clientset
func GatewayClientFromClientsetProvider(clients gateway_networking_k8s_io_v1beta1.Clientset) gateway_networking_k8s_io_v1beta1.GatewayClient {
	return clients.Gateways()
}

// Provider for Gateway Client from Client
func GatewayClientProvider(client client.Client) gateway_networking_k8s_io_v1beta1.GatewayClient {
	return gateway_networking_k8s_io_v1beta1.NewGatewayClient(client)
}

type GatewayClientFactory func(client client.Client) gateway_networking_k8s_io_v1beta1.GatewayClient

func GatewayClientFactoryProvider() GatewayClientFactory {
	return GatewayClientProvider
}

type GatewayClientFromConfigFactory func(cfg *rest.Config) (gateway_networking_k8s_io_v1beta1.GatewayClient, error)

func GatewayClientFromConfigFactoryProvider() GatewayClientFromConfigFactory {
	return func(cfg *rest.Config) (gateway_networking_k8s_io_v1beta1.GatewayClient, error) {
		clients, err := gateway_networking_k8s_io_v1beta1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.Gateways(), nil
	}
}
