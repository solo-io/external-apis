// Code generated by skv2. DO NOT EDIT.

package v1beta2

import (
	appmesh_k8s_aws_v1beta2 "github.com/solo-io/external-apis/pkg/api/appmesh/appmesh.k8s.aws/v1beta2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for MeshClient from Clientset
func MeshClientFromClientsetProvider(clients appmesh_k8s_aws_v1beta2.Clientset) appmesh_k8s_aws_v1beta2.MeshClient {
	return clients.Meshes()
}

// Provider for Mesh Client from Client
func MeshClientProvider(client client.Client) appmesh_k8s_aws_v1beta2.MeshClient {
	return appmesh_k8s_aws_v1beta2.NewMeshClient(client)
}

type MeshClientFactory func(client client.Client) appmesh_k8s_aws_v1beta2.MeshClient

func MeshClientFactoryProvider() MeshClientFactory {
	return MeshClientProvider
}

type MeshClientFromConfigFactory func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.MeshClient, error)

func MeshClientFromConfigFactoryProvider() MeshClientFromConfigFactory {
	return func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.MeshClient, error) {
		clients, err := appmesh_k8s_aws_v1beta2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.Meshes(), nil
	}
}

// Provider for VirtualServiceClient from Clientset
func VirtualServiceClientFromClientsetProvider(clients appmesh_k8s_aws_v1beta2.Clientset) appmesh_k8s_aws_v1beta2.VirtualServiceClient {
	return clients.VirtualServices()
}

// Provider for VirtualService Client from Client
func VirtualServiceClientProvider(client client.Client) appmesh_k8s_aws_v1beta2.VirtualServiceClient {
	return appmesh_k8s_aws_v1beta2.NewVirtualServiceClient(client)
}

type VirtualServiceClientFactory func(client client.Client) appmesh_k8s_aws_v1beta2.VirtualServiceClient

func VirtualServiceClientFactoryProvider() VirtualServiceClientFactory {
	return VirtualServiceClientProvider
}

type VirtualServiceClientFromConfigFactory func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.VirtualServiceClient, error)

func VirtualServiceClientFromConfigFactoryProvider() VirtualServiceClientFromConfigFactory {
	return func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.VirtualServiceClient, error) {
		clients, err := appmesh_k8s_aws_v1beta2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.VirtualServices(), nil
	}
}

// Provider for VirtualNodeClient from Clientset
func VirtualNodeClientFromClientsetProvider(clients appmesh_k8s_aws_v1beta2.Clientset) appmesh_k8s_aws_v1beta2.VirtualNodeClient {
	return clients.VirtualNodes()
}

// Provider for VirtualNode Client from Client
func VirtualNodeClientProvider(client client.Client) appmesh_k8s_aws_v1beta2.VirtualNodeClient {
	return appmesh_k8s_aws_v1beta2.NewVirtualNodeClient(client)
}

type VirtualNodeClientFactory func(client client.Client) appmesh_k8s_aws_v1beta2.VirtualNodeClient

func VirtualNodeClientFactoryProvider() VirtualNodeClientFactory {
	return VirtualNodeClientProvider
}

type VirtualNodeClientFromConfigFactory func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.VirtualNodeClient, error)

func VirtualNodeClientFromConfigFactoryProvider() VirtualNodeClientFromConfigFactory {
	return func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.VirtualNodeClient, error) {
		clients, err := appmesh_k8s_aws_v1beta2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.VirtualNodes(), nil
	}
}

// Provider for VirtualRouterClient from Clientset
func VirtualRouterClientFromClientsetProvider(clients appmesh_k8s_aws_v1beta2.Clientset) appmesh_k8s_aws_v1beta2.VirtualRouterClient {
	return clients.VirtualRouters()
}

// Provider for VirtualRouter Client from Client
func VirtualRouterClientProvider(client client.Client) appmesh_k8s_aws_v1beta2.VirtualRouterClient {
	return appmesh_k8s_aws_v1beta2.NewVirtualRouterClient(client)
}

type VirtualRouterClientFactory func(client client.Client) appmesh_k8s_aws_v1beta2.VirtualRouterClient

func VirtualRouterClientFactoryProvider() VirtualRouterClientFactory {
	return VirtualRouterClientProvider
}

type VirtualRouterClientFromConfigFactory func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.VirtualRouterClient, error)

func VirtualRouterClientFromConfigFactoryProvider() VirtualRouterClientFromConfigFactory {
	return func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.VirtualRouterClient, error) {
		clients, err := appmesh_k8s_aws_v1beta2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.VirtualRouters(), nil
	}
}

// Provider for VirtualGatewayClient from Clientset
func VirtualGatewayClientFromClientsetProvider(clients appmesh_k8s_aws_v1beta2.Clientset) appmesh_k8s_aws_v1beta2.VirtualGatewayClient {
	return clients.VirtualGateways()
}

// Provider for VirtualGateway Client from Client
func VirtualGatewayClientProvider(client client.Client) appmesh_k8s_aws_v1beta2.VirtualGatewayClient {
	return appmesh_k8s_aws_v1beta2.NewVirtualGatewayClient(client)
}

type VirtualGatewayClientFactory func(client client.Client) appmesh_k8s_aws_v1beta2.VirtualGatewayClient

func VirtualGatewayClientFactoryProvider() VirtualGatewayClientFactory {
	return VirtualGatewayClientProvider
}

type VirtualGatewayClientFromConfigFactory func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.VirtualGatewayClient, error)

func VirtualGatewayClientFromConfigFactoryProvider() VirtualGatewayClientFromConfigFactory {
	return func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.VirtualGatewayClient, error) {
		clients, err := appmesh_k8s_aws_v1beta2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.VirtualGateways(), nil
	}
}

// Provider for GatewayRouteClient from Clientset
func GatewayRouteClientFromClientsetProvider(clients appmesh_k8s_aws_v1beta2.Clientset) appmesh_k8s_aws_v1beta2.GatewayRouteClient {
	return clients.GatewayRoutes()
}

// Provider for GatewayRoute Client from Client
func GatewayRouteClientProvider(client client.Client) appmesh_k8s_aws_v1beta2.GatewayRouteClient {
	return appmesh_k8s_aws_v1beta2.NewGatewayRouteClient(client)
}

type GatewayRouteClientFactory func(client client.Client) appmesh_k8s_aws_v1beta2.GatewayRouteClient

func GatewayRouteClientFactoryProvider() GatewayRouteClientFactory {
	return GatewayRouteClientProvider
}

type GatewayRouteClientFromConfigFactory func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.GatewayRouteClient, error)

func GatewayRouteClientFromConfigFactoryProvider() GatewayRouteClientFromConfigFactory {
	return func(cfg *rest.Config) (appmesh_k8s_aws_v1beta2.GatewayRouteClient, error) {
		clients, err := appmesh_k8s_aws_v1beta2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.GatewayRoutes(), nil
	}
}
